{"ast":null,"code":"var _jsxFileName = \"/Users/shammy/Documents/GitHub/taskhub/frontend/src/components/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTasks } from \"../features/taskSlice\";\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.tasks.items);\n  const taskStatus = useSelector(state => state.tasks.status);\n  useEffect(() => {\n    if (taskStatus === \"idle\") {\n      dispatch(fetchTasks());\n    }\n  }, [taskStatus, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"BX0tvdgNp40BUZ4N9TETAHgQPLI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchTasks","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","dispatch","tasks","state","items","taskStatus","status","children","map","task","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shammy/Documents/GitHub/taskhub/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTasks } from \"../features/taskSlice\";\nimport TaskItem from \"./TaskItem\";\nimport { RootState, AppDispatch } from \"../app/store\";\n\nconst TaskList: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const tasks = useSelector((state: RootState) => state.tasks.items);\n  const taskStatus = useSelector((state: RootState) => state.tasks.status);\n\n  useEffect(() => {\n    if (taskStatus === \"idle\") {\n      dispatch(fetchTasks());\n    }\n  }, [taskStatus, dispatch]);\n\n  return (\n    <div>\n      {tasks.map((task) => (\n        <TaskItem key={task.id} task={task} />\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGR,WAAW,CAAc,CAAC;EAC3C,MAAMS,KAAK,GAAGR,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAACE,KAAK,CAAC;EAClE,MAAMC,UAAU,GAAGX,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAACI,MAAM,CAAC;EAExEd,SAAS,CAAC,MAAM;IACd,IAAIa,UAAU,KAAK,MAAM,EAAE;MACzBJ,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACU,UAAU,EAAEJ,QAAQ,CAAC,CAAC;EAE1B,oBACEH,OAAA;IAAAS,QAAA,EACGL,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACdX,OAAA,CAACF,QAAQ;MAAea,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CAlBID,QAAkB;EAAA,QACLN,WAAW,EACdC,WAAW,EACNA,WAAW;AAAA;AAAAqB,EAAA,GAH1BhB,QAAkB;AAoBxB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}